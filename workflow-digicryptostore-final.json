{
  "name": "DigiCryptoStore - Complete Workflow",
  "nodes": [
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "document_url",
              "name": "document_url",
              "value": "https://drive.google.com/file/d/1RR0GxtLP3jTe0tc8mmiTN53yvzluLuum/view?usp=drive_link",
              "type": "string"
            },
            {
              "id": "extension",
              "name": "extension",
              "value": "pdf",
              "type": "string"
            }
          ]
        }
      },
      "id": "1",
      "name": "üìÑ Input: Document URL",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [240, 300],
      "notes": "Enter the URL of the document to upload (Google Drive or direct URL)"
    },
    {
      "parameters": {
        "operation": "upload",
        "resourceType": "docs",
        "inputType": "url",
        "fileUrl": "={{ $json.document_url.includes('drive.google.com/file/d/') ? 'https://drive.google.com/uc?id=' + $json.document_url.match(/\\/d\\/([^\\/]+)\\//)[1] + '&export=download' : $json.document_url }}",
        "title": "={{ $json.document_url.includes('/d/') ? $json.document_url.match(/\\/d\\/([^\\/]+)\\//)[1] : $json.document_url.split('id=')[1].split('&')[0] }}.{{ $json.extension }}",
        "description": "Document uploaded via n8n",
        "fileExtension": "={{ $json.extension }}"
      },
      "id": "2",
      "name": "üì§ Upload Document",
      "type": "n8n-nodes-digicryptostore.digiCryptoStore",
      "typeVersion": 1,
      "position": [480, 300],
      "credentials": {
        "digiCryptoStoreApi": {
          "id": "SELECT_YOUR_CREDENTIAL",
          "name": "DigiCryptoStore API"
        },
        "solanaApi": {
          "id": "SELECT_YOUR_SOLANA_CREDENTIAL",
          "name": "Solana API"
        }
      },
      "notes": "Uploads document and returns storage_id. Automatically converts Google Drive sharing URLs to download URLs."
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "nftName",
              "name": "nftName",
              "value": "={{ $('üì§ Upload Document').item.json.data.name || 'My Document' }}",
              "type": "string"
            },
            {
              "id": "nftSymbol",
              "name": "nftSymbol",
              "value": "DOC",
              "type": "string"
            },
            {
              "id": "nftDescription",
              "name": "nftDescription",
              "value": "Official document certification",
              "type": "string"
            },
            {
              "id": "ownerName",
              "name": "ownerName",
              "value": "John Doe",
              "type": "string"
            },
            {
              "id": "twitterUrl",
              "name": "twitterUrl",
              "value": "",
              "type": "string"
            },
            {
              "id": "discordUrl",
              "name": "discordUrl",
              "value": "",
              "type": "string"
            },
            {
              "id": "instagramUrl",
              "name": "instagramUrl",
              "value": "",
              "type": "string"
            },
            {
              "id": "telegramUrl",
              "name": "telegramUrl",
              "value": "",
              "type": "string"
            },
            {
              "id": "mediumUrl",
              "name": "mediumUrl",
              "value": "",
              "type": "string"
            },
            {
              "id": "wikiUrl",
              "name": "wikiUrl",
              "value": "",
              "type": "string"
            },
            {
              "id": "youtubeUrl",
              "name": "youtubeUrl",
              "value": "",
              "type": "string"
            },
            {
              "id": "collectionMintAddress",
              "name": "collectionMintAddress",
              "value": "",
              "type": "string"
            }
          ]
        }
      },
      "id": "3",
      "name": "üìù Edit Certification Values",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [720, 300],
      "notes": "‚ö†Ô∏è EDIT ALL VALUES HERE:\n\nAUTO-FILLED:\n‚Ä¢ nftName: From upload (EDITABLE)\n\nREQUIRED:\n‚Ä¢ nftSymbol: NFT symbol (4 chars)\n‚Ä¢ nftDescription: Description\n‚Ä¢ ownerName: Owner name (20 chars max)\n\nOPTIONAL:\n‚Ä¢ Social URLs (Twitter, Discord, Instagram, etc.)\n‚Ä¢ collectionMintAddress: Custom collection (leave empty for default)\n\nAUTO-GENERATED BY SERVER:\n‚Ä¢ external_url: Created from storage_id\n‚Ä¢ affiliate_code: Retrieved from user profile in database\n\nNOTE: Solana private key is taken from Solana API credential"
    },
    {
      "parameters": {
        "operation": "b2bCertifyFull",
        "resourceType": "docs",
        "storageIdB2b": "={{ $('üì§ Upload Document').item.json.data.iv_storageid }}",
        "nftName": "={{ $json.nftName }}",
        "nftSymbol": "={{ $json.nftSymbol }}",
        "nftDescription": "={{ $json.nftDescription }}",
        "ownerName": "={{ $json.ownerName }}",
        "twitterUrl": "={{ $json.twitterUrl }}",
        "discordUrl": "={{ $json.discordUrl }}",
        "instagramUrl": "={{ $json.instagramUrl }}",
        "telegramUrl": "={{ $json.telegramUrl }}",
        "mediumUrl": "={{ $json.mediumUrl }}",
        "wikiUrl": "={{ $json.wikiUrl }}",
        "youtubeUrl": "={{ $json.youtubeUrl }}",
        "collectionMintAddress": "={{ $json.collectionMintAddress }}"
      },
      "id": "4",
      "name": "üöÄ B2B Certify Full",
      "type": "n8n-nodes-digicryptostore.digiCryptoStore",
      "typeVersion": 1,
      "position": [960, 300],
      "credentials": {
        "digiCryptoStoreApi": {
          "id": "SELECT_YOUR_CREDENTIAL",
          "name": "DigiCryptoStore API"
        },
        "solanaApi": {
          "id": "SELECT_YOUR_SOLANA_CREDENTIAL",
          "name": "Solana API"
        }
      },
      "notes": "Complete B2B certification:\n1. Get pricing\n2. Check balances\n3. Swap SOL‚ÜíCHECKHC (if needed)\n4. Transfer CHECKHC\n5. Upload to Arweave (3 files)\n6. Mint NFT\n7. Transfer NFT\n8. Finalize\n\n‚ö†Ô∏è Solana private key is automatically retrieved from Solana API credential\n\nDuration: ~30-60 seconds"
    }
  ],
  "connections": {
    "üìÑ Input: Document URL": {
      "main": [
        [
          {
            "node": "üì§ Upload Document",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üì§ Upload Document": {
      "main": [
        [
          {
            "node": "üìù Edit Certification Values",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üìù Edit Certification Values": {
      "main": [
        [
          {
            "node": "üöÄ B2B Certify Full",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "tags": [
    {
      "name": "digicryptostore"
    }
  ]
}
